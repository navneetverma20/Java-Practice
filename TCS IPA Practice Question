101
Philips
30000
3
TataCliq
102
Havells
35000
3
Flipkart
103
Hitachi
10000
4
TataCliq
104
Sony
20000
5
tatacliq
2
ID of the Projector with maximum price and having rating above than the required is: 101


CODE--
package myfirst;
import java.util.Scanner;

class Projector {
    private int projectorId;
    private String projectorName;
    private int price;
    private int rating;
    private String availableIn;
    
    public int getProjectorId(){
        return projectorId;
    }
    public void setProjectorId(int projectorId){
        this.projectorId = projectorId;
    }
    
    public String getProjectorName(){
        return projectorName;
    }
    public void setprojectorName(String projectorName){
        this.projectorName = projectorName;
    }
    
    public int getPrice(){
        return price;
    }
    public void setPrice(int price){
        this.price = price;
    }
    
    public int getRating(){
        return rating;
    }
    public void setRating(int rating){
        this.rating = rating;
    }
    
    public String getAvailbleIn(){
        return availableIn;
    }
    public void setAvailableIn(String availableIn){
        this.availableIn = availableIn;
    }
    
    public Projector(int projectorId, String projectorName, int price, int rating, String availableIn){
        this.projectorId = projectorId;
        this.projectorName = projectorName;
        this.price = price;
        this.rating = rating;
        this.availableIn = availableIn;
    }
}

public class MyFirst {
    public static void main(String[] args) {
        Projector[] proj = new Projector[4];
        
        Scanner sc = new Scanner(System.in);
        for(int i=0; i<proj.length; i++){
            int projectorId = sc.nextInt();
            sc.nextLine();
            String projectorName = sc.nextLine();
            int price = sc.nextInt();
            int rating = sc.nextInt();
            sc.nextLine();
            String availableIn = sc.nextLine();
            
            proj[i] = new Projector(projectorId, projectorName, price, rating, availableIn);
        }
        
        int givenRating = sc.nextInt();
        
        if(findMaximumPriceByRating(proj, givenRating) == null){
            System.out.println("No such Projector");
        }
        else{
            System.out.println("ID of the Projector with maximum price and having rating above than the required is: "+findMaximumPriceByRating(proj, givenRating).getProjectorId());
        }
    }
    
    public static Projector findMaximumPriceByRating(Projector[] proj, int givenRating){
        Projector maxProjector = null;
        int maxPrice = Integer.MIN_VALUE;
        for(int i=0; i<proj.length; i++){
            if(proj[i].getRating() > givenRating && proj[i].getAvailbleIn().equalsIgnoreCase("TataCliq")){
                if(maxPrice < proj[i].getPrice()){
                    maxProjector = proj[i];
                    maxPrice = proj[i].getPrice();
                }
            }
        }
        return maxProjector;
    }
}
